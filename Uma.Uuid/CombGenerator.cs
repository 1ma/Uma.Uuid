using System;
using System.Buffers.Binary;

namespace Uma.Uuid
{
    /// <summary>
    /// The CombGenerator generates Uuids similar to those of the Version4Generator,
    /// but their 48 higher bits consist of a binary timestamp. This makes them partially
    /// monotonic, a desired property when they are used as a table primary key.
    /// </summary>
    /// <remarks>
    /// The Uuids generated by CombGenerator might not be strictly monotonic if two or
    /// more of them are generated at exactly the same instant, since the lower 80 bits
    /// are completely random.
    ///
    /// The COMB generator was first described in 2002 by Jimmy Nilsson at
    /// InformIT: http://www.informit.com/articles/article.aspx?p=25862
    /// </remarks>
    public class CombGenerator : IUuidGenerator
    {
        private readonly IUuidGenerator _version4 = new Version4Generator();

        public Uuid NewUuid(string name = null)
        {
            var tmp = new byte[8];
            var timestamp = DateTimeOffset.Now.Ticks - DateTimeOffset.UnixEpoch.Ticks;
            BinaryPrimitives.WriteInt64BigEndian(tmp.AsSpan(), (timestamp / 10) << 4);

            var bytes = new byte[16];
            Array.Copy(tmp, 1, bytes, 0, 6);
            Array.Copy(_version4.NewUuid().ToByteArray(), 6, bytes, 6, 10);

            return new Uuid(bytes);
        }
    }
}
